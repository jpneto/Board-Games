%!PS-Adobe-3.0
%%Creator: Cameron Browne and Joao Neto
%%Title: go-test.ps
%%CreationDate: 1/1/2004
%%BoundingBox: 0 0 590 260
%%Pages: 1
%%Page: 1 1
%%EndComments

%---------------- Constants -------------------

/dx 24 def                      % the size of the squares
/half { .5 dx mul sub } def     % move into the SW intersection
/r { .4 dx mul } def            % the size of the stones
/coordsize  { dx 0.7 mul } def  % the size of the coordinates
/insidesize { dx 0.6 mul } def  % the size of the letters inside the stones
/pieceborder {dx .05 mul } def

/Chars 
{[(A)(B)(C)(D)(E)(F)(G)(H)(I)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)(U)(V)(W)(X)(Y)(Z)(AA)(AB)(AC)]
} def

/Digits
{	[( 0)( 1)( 2)( 3)( 4)( 5)( 6)( 7)( 8)( 9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(21)(22)(23)(24)(25)(26)(27)(28)(29)(30)(31)(32)(33)(34)(35)(36)(37)(38)(39)(40)(41)(42)(43)(44)(45)(46)(47)(48)(49)(50)]
} def


%---------------- Functions -------------------

/White
{
    /i exch def
    /j exch def

    1 setgray
    0 setlinewidth
    newpath i dx mul half j dx mul half r 0 360 arc fill

    0 setgray
    pieceborder setlinewidth
    newpath i dx mul half j dx mul half r 0 360 arc stroke
} def

/Black
{
    /i exch def
    /j exch def

    0 setgray
    pieceborder setlinewidth
    newpath i dx mul half j dx mul half r 0 360 arc fill
    newpath i dx mul half j dx mul half r 0 360 arc stroke
} def

/Grey
{
    /i exch def
    /j exch def

    0.75 setgray
    0 setlinewidth
    newpath i dx mul half j dx mul half r 0 360 arc fill

    0 setgray
    pieceborder setlinewidth
    newpath i dx mul half j dx mul half r 0 360 arc stroke
} def

/Board
{   % call: r(ows) c(ols) b(ool -> if true show coords)
    /b exch def
    /cols exch def
    /rows exch def

    /width  cols dx mul def
    /height rows dx mul def

    0 setgray
    1 setlinecap
    %1 setlinejoin

    % Draw grid
    0.5 setlinewidth

    gsave

    dx 2 div dx 2 div translate
   
    0 1 rows   % for each row
    { 
        dup
        /i exch def     
        /x i dx mul def
        newpath 0 x moveto width x lineto stroke
    } for


    0 1 cols   % for each column
    { 
        dup
        /i exch def     
        /x i dx mul def
        newpath x 0 moveto x height lineto stroke
    } for

    b {
      1 1 cols 1 add   % for each column label
      { 
          dup
          /i exch def
          -0.5 i -0.5 add Chars i 1 sub get Label 
      } for
    } if

    grestore

    b {
      1 1 rows 1 add  % for each row label
      { 
          dup
          /i exch def     
          i -0.25 Digits i get Label 
      } for
    } if

    % Draw board edges
    2 setlinewidth
    newpath 
     0.5 dx mul 1 sub
     0.5 dx mul 1 sub
     moveto

     0.5 dx mul 1 sub
     rows 0.5 add dx mul 1 add
     lineto

     cols 0.5 add dx mul 1 add
     rows 0.5 add dx mul 1 add
     lineto

     cols 0.5 add dx mul 1 add
     0.5 dx mul 1 sub
     lineto

     closepath
    stroke
} def

/Label
{   % call: j i s(tring)
    /s exch def
    /i exch def
    /j exch def

    gsave
    -0.5 dx mul -0.5 dx mul translate

    /Courier findfont coordsize scalefont setfont
    newpath 
    j 9 gt {      % if the number (for the column label) is 10 or greater
      gsave       %    it will condense font to fit size
      /basefont /Courier findfont def
      basefont [coordsize 2 div 0 0 coordsize 0 0] makefont setfont
      i dx mul r 2.5 div sub r add 
      j dx mul r 2.5 div sub 
      moveto s show
      grestore
    }{
      i dx mul r 2.5 div sub 
      j dx mul r 2.5 div sub 
      moveto s show
    } ifelse

    grestore

} def


/Marker
{   % call: j i g(rey ratio) b(oolean/charpath) s(tring -> just 1 char)
    /s exch def
    /b exch def
    /g exch def
    /i exch def
    /j exch def

    gsave
    -0.5 dx mul -0.5 dx mul translate

    g setgray
    newpath i dx mul r 2.5 div sub j dx mul r 2.5 div sub
    moveto

    /Helvetica-Bold findfont insidesize scalefont setfont
    .5 setlinewidth
    b {
        s true charpath stroke
      } {
        s show
    } ifelse
    grestore

} def

/MarkerSm
{   % call: j i g(rey ratio) b(oolean/charpath) s(tring -> just 2 chars)
    /s exch def
    /b exch def
    /g exch def
    /i exch def
    /j exch def

    gsave

    -0.5 dx mul -0.5 dx mul translate
    g setgray
    newpath i dx mul r 2.5 div sub j dx mul r 2.5 div sub
    moveto

    /basefont /Helvetica-Bold findfont def
    basefont [insidesize 2 div 0 0 insidesize 0 0] makefont setfont
    .5 setlinewidth

    b {
        s true charpath stroke
      } {
        s show
    } ifelse

    grestore

} def

/WhiteSpot
{
    /i exch def
    /j exch def

    1 setgray
    0 setlinewidth
    newpath i dx mul half j dx mul half r 0.75 mul 0 360 arc fill

} def

/BlackSpot
{
    /i exch def
    /j exch def

    0 setgray
%    0 setlinewidth
    newpath i dx mul half j dx mul half dx 0.125 mul 0 360 arc fill

} def

%--------------------------------------------------------------------------
%---------------- (make your diagram starting here) -----------------------
%--------------------------------------------------------------------------

dx 2 mul dx 2 mul translate

gsave

%--------------------------------------------------------------------------

6 10 true Board

6 4 White
3 5 White
4 4 White
6 5 White
7 5 White
3 6 White

5 2 Black
5 3 Black
3 4 Black
5 4 Black
2 5 Black
4 5 Black
2 7 Black 

1 1 Grey

5 4 1 false (12) MarkerSm
5 3 1 false (b) Marker
4 4 0 true (c) Marker
6 2 WhiteSpot
6 2 0 false (d) Marker

3 3 BlackSpot

%--------------------------------------------------------------------------

grestore

showpage
